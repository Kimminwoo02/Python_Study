'''
숫자 내장 함수!

'''

'''
1.abs() 함수
전달된 인수를 절대값으로 반환한다!
'''

'''
2.divmod()함수
전달된 두 인수를 나누어 몫 과 나머지 를 한 쌍으로 반환한다!
몫과 나머지는 하나의 튜플로 반환한다!
divmod(10,3)
# 결과로 (3,1) 이 반환된다. 3은 몫, 1은 나머지

<class 'tuple'>
이다!
'''

for i in enumerate({'k':'v','k1':'k2'}):
    print(i) # 결과로 ( 0, 'k')
             #       ( 1, 'k1') 이 나온다. 튜플이다

'''
3. float() 함수
전달된 인수 를 실수로 만들어 반환합니다.
전달된 인수가 없는 경우 0.0을 반환한다!

'''

'''
4. int() 함수
전달된 인수를 정수로 만들어 반환합니다.
전달된 인수가 없는 경우에는 0을 반환!
'''

'''
5. max()
전달된 인수 중 가장 큰 값을 반환!
max(1,10) -> 10
li = [5,2,3]
max(li)= 5

'''


'''
6. min 함수
전달된 인수중 가장 작은 값 반환
min(1,10)
'''

'''
pow()
전달된 두 인수의 거듭제곱을 반환 잘 사용 안한다!
pow(10,2) = print( 10** 2)
'''


'''
8.round() 함수
전달된 인수를 이용해 반올림한 값을 반환한다!
전달된 인수가 하나이면 정수로 반올림한 값을 반환하고,
전달된 인수가 2개이면 두번째로 전달된 인수만큼 소수점을 반환!
round(1.5)
->2
round(1.4)
->1
'''

'''
9.sum ()
전달된 리스트나 튜플과 같은 반복가능객체의 합계를 반환!

#sum 사용전
total  = 0
for i in list:
    total += i 
    .
    .
    .
print(sum(list)) 이렇게 한줄로 가능!
'''

'''

다음은 빵집에서 10000원을 주고 빵과 거스름돈을 받는 상황을 구현한 
프로그램이다 
- 빵 1개의 가격은 3000원 입니다.
출력:
빵을 3개 사고 1000원이 남습니다.
'''
bread= 3000
money = 10000
result = divmod(money,bread)
print(f'빵을{result[0]}개 사고 {result[1]}이 남았습니다.')

